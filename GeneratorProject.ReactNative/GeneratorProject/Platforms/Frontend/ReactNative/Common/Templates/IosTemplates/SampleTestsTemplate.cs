// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.ReactNative
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Scaffold.BaseGenerators.Helpers;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Foundation.Jade.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Working\Mobioos\Generators new changes\28Nov2018\React-Native\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\IosTemplates\SampleTestsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class SampleTestsTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 2 "D:\Working\Mobioos\Generators new changes\28Nov2018\React-Native\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\IosTemplates\SampleTestsTemplate.tt"

    var model = (SmartAppInfo)Model;

            
            #line default
            #line hidden
            this.Write(@"/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#import <UIKit/UIKit.h>
#import <XCTest/XCTest.h>

#import <React/RCTLog.h>
#import <React/RCTRootView.h>

#define TIMEOUT_SECONDS 600
#define TEXT_TO_LOOK_FOR @""Welcome to React Native!""

@interface ");
            
            #line 21 "D:\Working\Mobioos\Generators new changes\28Nov2018\React-Native\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\IosTemplates\SampleTestsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.PascalCase(model.Id)));
            
            #line default
            #line hidden
            this.Write("Tests : XCTestCase\r\n\r\n@end\r\n\r\n@implementation ");
            
            #line 25 "D:\Working\Mobioos\Generators new changes\28Nov2018\React-Native\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\IosTemplates\SampleTestsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.PascalCase(model.Id)));
            
            #line default
            #line hidden
            this.Write("Tests\r\n\r\n- (BOOL)findSubviewInView:(UIView *)view matching:(BOOL(^)(UIView *view)" +
                    ")test\r\n{\r\n  if (test(view)) {\r\n    return YES;\r\n  }\r\n  for (UIView *subview in [" +
                    "view subviews]) {\r\n    if ([self findSubviewInView:subview matching:test]) {\r\n  " +
                    "    return YES;\r\n    }\r\n  }\r\n  return NO;\r\n}\r\n\r\n- (void)testRendersWelcomeScreen" +
                    "\r\n{\r\n  UIViewController *vc = [[[RCTSharedApplication() delegate] window] rootVi" +
                    "ewController];\r\n  NSDate *date = [NSDate dateWithTimeIntervalSinceNow:TIMEOUT_SE" +
                    "CONDS];\r\n  BOOL foundElement = NO;\r\n\r\n  __block NSString *redboxError = nil;\r\n  " +
                    "RCTSetLogFunction(^(RCTLogLevel level, RCTLogSource source, NSString *fileName, " +
                    "NSNumber *lineNumber, NSString *message) {\r\n    if (level >= RCTLogLevelError) {" +
                    "\r\n      redboxError = message;\r\n    }\r\n  });\r\n\r\n  while ([date timeIntervalSince" +
                    "Now] > 0 && !foundElement && !redboxError) {\r\n    [[NSRunLoop mainRunLoop] runMo" +
                    "de:NSDefaultRunLoopMode beforeDate:[NSDate dateWithTimeIntervalSinceNow:0.1]];\r\n" +
                    "    [[NSRunLoop mainRunLoop] runMode:NSRunLoopCommonModes beforeDate:[NSDate dat" +
                    "eWithTimeIntervalSinceNow:0.1]];\r\n\r\n    foundElement = [self findSubviewInView:v" +
                    "c.view matching:^BOOL(UIView *view) {\r\n      if ([view.accessibilityLabel isEqua" +
                    "lToString:TEXT_TO_LOOK_FOR]) {\r\n        return YES;\r\n      }\r\n      return NO;\r\n" +
                    "    }];\r\n  }\r\n\r\n  RCTSetLogFunction(RCTDefaultLogFunction);\r\n\r\n  XCTAssertNil(re" +
                    "dboxError, @\"RedBox error: %@\", redboxError);\r\n  XCTAssertTrue(foundElement, @\"C" +
                    "ouldn\'t find element with text \'%@\' in %d seconds\", TEXT_TO_LOOK_FOR, TIMEOUT_SE" +
                    "CONDS);\r\n}\r\n\r\n\r\n@end");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
