// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.ReactNative
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Mobioos_Ver_2.0 --10.11.19\Generator-React-Native-master\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\AndroidTemplates\BuildGradleTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class BuildGradleTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            #line 2 "D:\Mobioos_Ver_2.0 --10.11.19\Generator-React-Native-master\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\AndroidTemplates\BuildGradleTemplate.tt"

    var model = (SmartAppInfo)Model;

            
            #line default
            #line hidden
            this.Write("apply plugin: \"com.android.application\"\r\n\r\nimport com.android.build.OutputFile\r\n\r" +
                    "\n/**\r\n * The react.gradle file registers a task for each build variant (e.g. bun" +
                    "dleDebugJsAndAssets\r\n * and bundleReleaseJsAndAssets).\r\n * These basically call " +
                    "`react-native bundle` with the correct arguments during the Android build\r\n * cy" +
                    "cle. By default, bundleDebugJsAndAssets is skipped, as in debug/dev mode we pref" +
                    "er to load the\r\n * bundle directly from the development server. Below you can se" +
                    "e all the possible configurations\r\n * and their defaults. If you decide to add a" +
                    " configuration block, make sure to add it before the\r\n * `apply from: \"../../nod" +
                    "e_modules/react-native/react.gradle\"` line.\r\n *\r\n * project.ext.react = [\r\n *   " +
                    "// the name of the generated asset file containing your JS bundle\r\n *   bundleAs" +
                    "setName: \"index.android.bundle\",\r\n *\r\n *   // the entry file for bundle generati" +
                    "on\r\n *   entryFile: \"index.android.js\",\r\n *\r\n *   // https://facebook.github.io/" +
                    "react-native/docs/performance#enable-the-ram-format\r\n *   bundleCommand: \"ram-bu" +
                    "ndle\",\r\n *\r\n *   // whether to bundle JS and assets in debug mode\r\n *   bundleIn" +
                    "Debug: false,\r\n *\r\n *   // whether to bundle JS and assets in release mode\r\n *  " +
                    " bundleInRelease: true,\r\n *\r\n *   // whether to bundle JS and assets in another " +
                    "build variant (if configured).\r\n *   // See http://tools.android.com/tech-docs/n" +
                    "ew-build-system/user-guide#TOC-Build-Variants\r\n *   // The configuration propert" +
                    "y can be in the following formats\r\n *   //         \'bundleIn${productFlavor}${bu" +
                    "ildType}\'\r\n *   //         \'bundleIn${buildType}\'\r\n *   // bundleInFreeDebug: tr" +
                    "ue,\r\n *   // bundleInPaidRelease: true,\r\n *   // bundleInBeta: true,\r\n *\r\n *   /" +
                    "/ whether to disable dev mode in custom build variants (by default only disabled" +
                    " in release)\r\n *   // for example: to disable dev mode in the staging build type" +
                    " (if configured)\r\n *   devDisabledInStaging: true,\r\n *   // The configuration pr" +
                    "operty can be in the following formats\r\n *   //         \'devDisabledIn${productF" +
                    "lavor}${buildType}\'\r\n *   //         \'devDisabledIn${buildType}\'\r\n *\r\n *   // th" +
                    "e root of your project, i.e. where \"package.json\" lives\r\n *   root: \"../../\",\r\n " +
                    "*\r\n *   // where to put the JS bundle asset in debug mode\r\n *   jsBundleDirDebug" +
                    ": \"$buildDir/intermediates/assets/debug\",\r\n *\r\n *   // where to put the JS bundl" +
                    "e asset in release mode\r\n *   jsBundleDirRelease: \"$buildDir/intermediates/asset" +
                    "s/release\",\r\n *\r\n *   // where to put drawable resources / React Native assets, " +
                    "e.g. the ones you use via\r\n *   // require(\'./image.png\')), in debug mode\r\n *   " +
                    "resourcesDirDebug: \"$buildDir/intermediates/res/merged/debug\",\r\n *\r\n *   // wher" +
                    "e to put drawable resources / React Native assets, e.g. the ones you use via\r\n *" +
                    "   // require(\'./image.png\')), in release mode\r\n *   resourcesDirRelease: \"$buil" +
                    "dDir/intermediates/res/merged/release\",\r\n *\r\n *   // by default the gradle tasks" +
                    " are skipped if none of the JS files or assets change; this means\r\n *   // that " +
                    "we don\'t look at files in android/ or ios/ to determine whether the tasks are up" +
                    " to\r\n *   // date; if you have any other folders that you want to ignore for per" +
                    "formance reasons (gradle\r\n *   // indexes the entire tree), add them here. Alter" +
                    "natively, if you have JS files in android/\r\n *   // for example, you might want " +
                    "to remove it from here.\r\n *   inputExcludes: [\"android/**\", \"ios/**\"],\r\n *\r\n *  " +
                    " // override which node gets called and with what additional arguments\r\n *   nod" +
                    "eExecutableAndArgs: [\"node\"],\r\n *\r\n *   // supply additional arguments to the pa" +
                    "ckager\r\n *   extraPackagerArgs: []\r\n * ]\r\n */\r\n\r\nproject.ext.react = [\r\n    entr" +
                    "yFile: \"index.js\",\r\n    enableHermes: false,  // clean and rebuild if changing\r\n" +
                    "]\r\n\r\napply from: \"../../node_modules/react-native/react.gradle\"\r\n\r\n/**\r\n * Set t" +
                    "his to true to create two separate APKs instead of one:\r\n *   - An APK that only" +
                    " works on ARM devices\r\n *   - An APK that only works on x86 devices\r\n * The adva" +
                    "ntage is the size of the APK is reduced by about 4MB.\r\n * Upload all the APKs to" +
                    " the Play Store and people will download\r\n * the correct one based on the CPU ar" +
                    "chitecture of their device.\r\n */\r\ndef enableSeparateBuildPerCPUArchitecture = fa" +
                    "lse\r\n\r\n/**\r\n * Run Proguard to shrink the Java bytecode in release builds.\r\n */\r" +
                    "\ndef enableProguardInReleaseBuilds = false\r\n\r\n/**\r\n * The preferred build flavor" +
                    " of JavaScriptCore.\r\n *\r\n * For example, to use the international variant, you c" +
                    "an use:\r\n * `def jscFlavor = \'org.webkit:android-jsc-intl:+\'`\r\n *\r\n * The intern" +
                    "ational variant includes ICU i18n library and necessary data\r\n * allowing to use" +
                    " e.g. `Date.toLocaleString` and `String.localeCompare` that\r\n * give correct res" +
                    "ults when using with locales other than en-US.  Note that\r\n * this variant is ab" +
                    "out 6MiB larger per architecture than default.\r\n */\r\ndef jscFlavor = \'org.webkit" +
                    ":android-jsc:+\'\r\n\r\n/**\r\n * Whether to enable the Hermes VM.\r\n *\r\n * This should " +
                    "be set on project.ext.react and mirrored here.  If it is not set\r\n * on project." +
                    "ext.react, JavaScript will not be compiled to Hermes Bytecode\r\n * and the benefi" +
                    "ts of using Hermes will therefore be sharply reduced.\r\n */\r\ndef enableHermes = p" +
                    "roject.ext.react.get(\"enableHermes\", false);\r\n\r\nandroid {\r\n    compileSdkVersion" +
                    " rootProject.ext.compileSdkVersion\r\n\r\n    compileOptions {\r\n        sourceCompat" +
                    "ibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION" +
                    "_1_8\r\n    }\r\n\r\n    defaultConfig {\r\n        applicationId \"com.");
            
            #line 135 "D:\Mobioos_Ver_2.0 --10.11.19\Generator-React-Native-master\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\AndroidTemplates\BuildGradleTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id.ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n        minSdkVersion rootProject.ext.minSdkVersion\r\n        targetSdkVersion " +
                    "rootProject.ext.targetSdkVersion\r\n        versionCode 1\r\n        versionName \"1." +
                    "0\"\r\n    }\r\n    splits {\r\n        abi {\r\n            reset()\r\n            enable " +
                    "enableSeparateBuildPerCPUArchitecture\r\n            universalApk false  // If tru" +
                    "e, also generate a universal APK\r\n            include \"armeabi-v7a\", \"x86\", \"arm" +
                    "64-v8a\", \"x86_64\"\r\n        }\r\n    }\r\n    signingConfigs {\r\n        debug {\r\n    " +
                    "        storeFile file(\'debug.keystore\')\r\n            storePassword \'android\'\r\n " +
                    "           keyAlias \'androiddebugkey\'\r\n            keyPassword \'android\'\r\n      " +
                    "  }\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            signingConfig signing" +
                    "Configs.debug\r\n        }\r\n        release {\r\n            // Caution! In producti" +
                    "on, you need to generate your own keystore file.\r\n            // see https://fac" +
                    "ebook.github.io/react-native/docs/signed-apk-android.\r\n            signingConfig" +
                    " signingConfigs.debug\r\n            minifyEnabled enableProguardInReleaseBuilds\r\n" +
                    "            proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"progu" +
                    "ard-rules.pro\"\r\n        }\r\n    }\r\n    // applicationVariants are e.g. debug, rel" +
                    "ease\r\n    applicationVariants.all { variant ->\r\n        variant.outputs.each { o" +
                    "utput ->\r\n            // For each separate APK per architecture, set a unique ve" +
                    "rsion code as described here:\r\n            // https://developer.android.com/stud" +
                    "io/build/configure-apk-splits.html\r\n            def versionCodes = [\"armeabi-v7a" +
                    "\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\r\n            def abi = output.getFi" +
                    "lter(OutputFile.ABI)\r\n            if (abi != null) {  // null for the universal-" +
                    "debug, universal-release variants\r\n                output.versionCodeOverride =\r" +
                    "\n                        versionCodes.get(abi) * 1048576 + defaultConfig.version" +
                    "Code\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation" +
                    " fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation \"com.facebook.rea" +
                    "ct:react-native:+\"  // From node_modules\r\n\r\n    if (enableHermes) {\r\n        def" +
                    " hermesPath = \"../../node_modules/hermes-engine/android/\";\r\n        debugImpleme" +
                    "ntation files(hermesPath + \"hermes-debug.aar\")\r\n        releaseImplementation fi" +
                    "les(hermesPath + \"hermes-release.aar\")\r\n    } else {\r\n        implementation jsc" +
                    "Flavor\r\n    }\r\n}\r\n\r\n// Run this once to be able to run the application with BUCK" +
                    "\r\n// puts all compile dependencies into folder libs for BUCK to use\r\ntask copyDo" +
                    "wnloadableDepsToLibs(type: Copy) {\r\n    from configurations.compile\r\n    into \'l" +
                    "ibs\'\r\n}\r\n\r\napply from: file(\"../../node_modules/@react-native-community/cli-plat" +
                    "form-android/native_modules.gradle\"); applyNativeModulesAppBuildGradle(project)\r" +
                    "\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
