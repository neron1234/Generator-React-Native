// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.ReactNative
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Mobioos_Ver_2.0 --10.11.19\Generator-React-Native-master\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\AndroidTemplates\MainApplicationTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class MainApplicationTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            #line 1 "D:\Mobioos_Ver_2.0 --10.11.19\Generator-React-Native-master\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\AndroidTemplates\MainApplicationTemplate.tt"

    var model = (SmartAppInfo)Model;

            
            #line default
            #line hidden
            this.Write("package com.");
            
            #line 1 "D:\Mobioos_Ver_2.0 --10.11.19\Generator-React-Native-master\GeneratorProject.ReactNative\GeneratorProject\Platforms\Frontend\ReactNative\Common\Templates\AndroidTemplates\MainApplicationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id.ToLower()));
            
            #line default
            #line hidden
            this.Write(";\n\nimport android.app.Application;\nimport android.content.Context;\nimport com.fac" +
                    "ebook.react.PackageList;\nimport com.facebook.react.ReactApplication;\nimport com." +
                    "facebook.react.ReactNativeHost;\nimport com.facebook.react.ReactPackage;\nimport c" +
                    "om.facebook.soloader.SoLoader;\nimport java.lang.reflect.InvocationTargetExceptio" +
                    "n;\nimport java.util.List;\n\npublic class MainApplication extends Application impl" +
                    "ements ReactApplication {\n\n  private final ReactNativeHost mReactNativeHost =\n  " +
                    "    new ReactNativeHost(this) {\n        @Override\n        public boolean getUseD" +
                    "eveloperSupport() {\n          return BuildConfig.DEBUG;\n        }\n\n        @Over" +
                    "ride\n        protected List<ReactPackage> getPackages() {\n          @SuppressWar" +
                    "nings(\"UnnecessaryLocalVariable\")\n          List<ReactPackage> packages = new Pa" +
                    "ckageList(this).getPackages();\n          // Packages that cannot be autolinked y" +
                    "et can be added manually here, for example:\n          // packages.add(new MyReac" +
                    "tNativePackage());\n          return packages;\n        }\n\n        @Override\n     " +
                    "   protected String getJSMainModuleName() {\n          return \"index\";\n        }\n" +
                    "      };\n\n  @Override\n  public ReactNativeHost getReactNativeHost() {\n    return" +
                    " mReactNativeHost;\n  }\n\n  @Override\n  public void onCreate() {\n    super.onCreat" +
                    "e();\n    SoLoader.init(this, /* native exopackage */ false);\n    initializeFlipp" +
                    "er(this); // Remove this line if you don\'t want Flipper enabled\n  }\n\n  /**\n   * " +
                    "Loads Flipper in React Native templates.\n   *\n   * @param context\n   */\n  privat" +
                    "e static void initializeFlipper(Context context) {\n    if (BuildConfig.DEBUG) {\n" +
                    "      try {\n        /*\n         We use reflection here to pick up the class that" +
                    " initializes Flipper,\n        since Flipper library is not available in release " +
                    "mode\n        */\n        Class<?> aClass = Class.forName(\"com.facebook.flipper.Re" +
                    "actNativeFlipper\");\n        aClass.getMethod(\"initializeFlipper\", Context.class)" +
                    ".invoke(null, context);\n      } catch (ClassNotFoundException e) {\n        e.pri" +
                    "ntStackTrace();\n      } catch (NoSuchMethodException e) {\n        e.printStackTr" +
                    "ace();\n      } catch (IllegalAccessException e) {\n        e.printStackTrace();\n " +
                    "     } catch (InvocationTargetException e) {\n        e.printStackTrace();\n      " +
                    "}\n    }\n  }\n}\n\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
