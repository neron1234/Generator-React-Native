<#@ include file="..\..\Base\Templates\Include.tt"#>
<# if(_api.Actions.AsEnumerable()!= null && _api.Actions.AsEnumerable().Count() > 0)
   {
#>
import { <#=_api.Id.ToPascalCase()#><#= _apiSuffix.ToPascalCase() #> } from '../Api/<#=_api.Id.ToPascalCase()#><#= _apiSuffix.ToPascalCase() #>';

/**
 * Constants for action: <#=_api.Id#><#= _apiSuffix.ToPascalCase() #>Actions
*/
<#
        foreach(ApiActionInfo action in _api.Actions.AsEnumerable())
        {
            if (action.Id != null && action.Type != null)
            {
#>
    const <#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_REQUEST = '<#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_REQUEST1';
    const <#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_SUCCESS = '<#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_SUCCESS1';
    const <#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_FAILURE = '<#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_FAILURE1';

<#
            }
        }

       foreach(ApiActionInfo action in _api.Actions.AsEnumerable())
       {
           if (action.Id != null && action.Type != null)
            {
#>
export function to<#= action.Id.ToPascalCase() #>(){
    return function(dispatch){
        dispatch({ type:  <#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_REQUEST, isLoading: true});

        return <#=_api.Id.ToPascalCase()#><#= _apiSuffix.ToPascalCase() #>.<#= action.Id.ToCamelCase() #>()
            .then(response => response.json())
            .then(data =>{
                dispatch({ type: <#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_SUCCESS, <#=action.Id.ToCamelCase()#>: data, isLoading: false });
            })
            .catch(error => {
                dispatch({ type: <#=_api.Id.ToUpper()#>_<#=action.Id.ToUpper()#>_FAILURE, error: error, isLoading: false });
            });
    };
}
<#
            }
       }
   }
#>
